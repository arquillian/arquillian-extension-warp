<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.jboss.arquillian.extension</groupId>
    <artifactId>arquillian-warp-build</artifactId>
    <version>2.1.0.Final-SNAPSHOT</version>
  </parent>

  <artifactId>arquillian-warp-ftest-base</artifactId>
  <name>Arquillian Warp: Functional Test Base</name>
  <packaging>pom</packaging>

  <properties>
    <version.shrinkwrap>1.2.6</version.shrinkwrap>
    <version.shrinkwrap.descriptors>2.0.0</version.shrinkwrap.descriptors>
    <version.arquillian.glassfish>2.1.2</version.arquillian.glassfish>

    <!-- Arquillian Configuration -->
    <arquillian.debug>false</arquillian.debug>
    <arquillian.drone.browser>htmlUnit</arquillian.drone.browser>
    <arquillian.drone.reusable>false</arquillian.drone.reusable>
    <arquillian.container.home />
    <arquillian.container.distribution />
    <arquillian.container.configuration />
    <!-- Relative path to a file that should be made "executable" when the container is started by the arquillian container. -->
    <arquillian.container.linux.executepermission.file />
    <arquillian.container.uninstall>true</arquillian.container.uninstall>
    <arquillian.container.vmargs>-Xmx768m -Darquillian.debug=${arquillian.debug}
    </arquillian.container.vmargs>
    <arquillian.container.maxTestClassesBeforeRestart>50</arquillian.container.maxTestClassesBeforeRestart>

    <!-- Container Selection -->
    <arquillian.launch.wildfly>false</arquillian.launch.wildfly>
    <arquillian.launch.tomee>false</arquillian.launch.tomee>
    <arquillian.launch.glassfish>false</arquillian.launch.glassfish>

    <!-- Do NOT deploy any of the ITs modules -->
    <maven.deploy.skip>true</maven.deploy.skip>
    <skipNexusStagingDeployMojo>true</skipNexusStagingDeployMojo>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.jboss.arquillian.extension</groupId>
        <artifactId>arquillian-warp-build</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- Integration Tests - Version Management -->
      <dependency>
        <groupId>org.jboss.shrinkwrap</groupId>
        <artifactId>shrinkwrap-bom</artifactId>
        <version>${version.shrinkwrap}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.jboss.shrinkwrap.descriptors</groupId>
        <artifactId>shrinkwrap-descriptors-bom</artifactId>
        <version>${version.shrinkwrap.descriptors}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.jboss.shrinkwrap.descriptors</groupId>
        <artifactId>shrinkwrap-descriptors-depchain</artifactId>
        <type>pom</type>
        <version>${version.shrinkwrap.descriptors}</version>
      </dependency>
      <!--LittleProxy logging is done by Log4J: -->
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-bom</artifactId>
        <version>${version.log4j}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
      </testResource>
      <testResource>
        <directory>src/test/arquillian-settings/</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack-arquillian-settings</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.jboss.arquillian.extension</groupId>
                  <artifactId>arquillian-warp-build-resources</artifactId>
                  <version>${project.version}</version>
                  <type>jar</type>
                  <overWrite>true</overWrite>
                </artifactItem>
              </artifactItems>
              <includes>arquillian.xml</includes>
              <outputDirectory>src/test/arquillian-settings</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>

    <!-- Containers -->

    <profile>
      <id>wildfly-managed</id>
      <activation>
        <activeByDefault>true</activeByDefault>
        <property>
          <name>integration</name>
          <value>wildfly</value>
        </property>
      </activation>
      <properties>
        <arquillian.launch.wildfly>true</arquillian.launch.wildfly>
        <arquillian.container.home>${project.build.directory}/wildfly-${version.wildfly}</arquillian.container.home>
        <arquillian.container.distribution>org.wildfly:wildfly-dist:zip:${version.wildfly}
        </arquillian.container.distribution>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.wildfly.arquillian</groupId>
          <artifactId>wildfly-arquillian-container-managed</artifactId>
          <version>${version.wildfly.arquillian.container}</version>
          <scope>test</scope>
        </dependency>
        <!--The dependency on the servlet api must be declared for each profile, see detailed explanation in the
            test "org.jboss.arquillian.warp.jsf.ftest.lifecycle.TestFacesLifecycleFailurePropagation" in "jsf-ftest" project.
          -->
        <dependency>
          <groupId>jakarta.servlet</groupId>
          <artifactId>jakarta.servlet-api</artifactId>
          <scope>provided</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>wildfly-remote</id>
      <dependencies>
        <dependency>
          <groupId>org.wildfly.arquillian</groupId>
          <artifactId>wildfly-arquillian-container-remote</artifactId>
          <version>${version.wildfly.arquillian.container}</version>
          <scope>test</scope>
        </dependency>
        <!--The dependency on the servlet api must be declared for each profile, see detailed explanation in the
            test "org.jboss.arquillian.warp.jsf.ftest.lifecycle.TestFacesLifecycleFailurePropagation" in "jsf-ftest" project.
          -->
        <dependency>
          <groupId>jakarta.servlet</groupId>
          <artifactId>jakarta.servlet-api</artifactId>
          <scope>provided</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>wildfly-jakartaee11-managed</id>
      <!-- A WildFly preview container which supports JakartaEE11.
           Run this profile only in combination with the profile "jakartaee11" so that arquillian-extension-warp is built using the JakartaEE11 api:
           mvn clean install -Pjakartaee11,wildfly-jakartaee11-managed
	    -->
      <activation>
        <property>
          <name>integration</name>
          <value>wildfly</value>
        </property>
      </activation>
      <properties>
        <arquillian.launch.wildfly>true</arquillian.launch.wildfly>
        <arquillian.container.home>${project.build.directory}/wildfly-preview-${version.wildfly}</arquillian.container.home>
        <arquillian.container.distribution>org.wildfly:wildfly-preview-dist:zip:${version.wildfly}
        </arquillian.container.distribution>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.wildfly.arquillian</groupId>
          <artifactId>wildfly-arquillian-container-managed</artifactId>
          <version>${version.wildfly.arquillian.container}</version>
          <scope>test</scope>
        </dependency>
        <!--The dependency on the servlet api must be declared for each profile, see detailed explanation in the
            test "org.jboss.arquillian.warp.jsf.ftest.lifecycle.TestFacesLifecycleFailurePropagation" in "jsf-ftest" project.
          -->
        <dependency>
          <groupId>jakarta.servlet</groupId>
          <artifactId>jakarta.servlet-api</artifactId>
          <scope>provided</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>tomee-managed</id>
      <activation>
        <property>
          <name>integration</name>
          <value>tomee</value>
        </property>
      </activation>
      <properties>
        <arquillian.launch.tomee>true</arquillian.launch.tomee>
        <arquillian.container.home>${project.build.directory}/apache-tomee-webprofile-${version.tomee}
        </arquillian.container.home>
        <arquillian.container.distribution>org.apache.tomee:apache-tomee:zip:webprofile:${version.tomee}
        </arquillian.container.distribution>
      </properties>
      <dependencies>
        <!--The dependency on the servlet api must be declared for each profile, see detailed explanation in the
            test "org.jboss.arquillian.warp.jsf.ftest.lifecycle.TestFacesLifecycleFailurePropagation" in "jsf-ftest" project.

            Also, it must be declared before "org.apache.tomee:arquillian-tomee-remote", because the latter brings "org.apache.tomee:jakartaee-api",
            which also contains a "ServletException", but with a different SerialVersionUID. Thus the error described in "TestFacesLifecycleFailurePropagation"
            would occur.
            If we declare the servlet api jar before the arquillian jar, the ServletException class is loaded from there.
          -->
        <dependency>
          <groupId>org.apache.tomcat</groupId>
          <artifactId>tomcat-servlet-api</artifactId>
          <scope>provided</scope>
          <version>${version.tomee.tomcat}</version>
        </dependency>
        <dependency>
          <groupId>org.apache.tomee</groupId>
          <artifactId>arquillian-tomee-remote</artifactId>
          <version>${version.tomee}</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>glassfish-managed</id>
      <activation>
        <property>
          <name>integration</name>
          <value>glassfish</value>
        </property>
      </activation>
      <properties>
        <arquillian.launch.glassfish>true</arquillian.launch.glassfish>
        <arquillian.container.home>${project.build.directory}/glassfish7</arquillian.container.home>
        <arquillian.container.distribution>org.glassfish.main.distributions:glassfish:zip:${version.glassfish}
        </arquillian.container.distribution>
        <!-- Relative path to a file that should be made "executable" when the container is started by the arquillian container.
             Here it is the "asadmin" script (https://github.com/OmniFish-EE/arquillian-container-glassfish/pull/9) -->
        <arquillian.container.linux.executepermission.file>glassfish7/glassfish/bin/asadmin
        </arquillian.container.linux.executepermission.file>
      </properties>

      <dependencies>

        <!--The original glassfish container is abandoned and does not support glassfish 7
            (https://github.com/arquillian/arquillian-container-glassfish and https://github.com/arquillian/arquillian-container-glassfish6),
            so use a fork at https://github.com/OmniFish-EE/arquillian-container-glassfish <dependency>
        -->
        <dependency>
          <groupId>ee.omnifish.arquillian</groupId>
          <artifactId>arquillian-glassfish-server-managed</artifactId>
          <version>${version.arquillian.glassfish}</version>
          <scope>test</scope>
        </dependency>
        <!--The dependency on the servlet api must be declared for each profile, see detailed explanation in the
            test "org.jboss.arquillian.warp.jsf.ftest.lifecycle.TestFacesLifecycleFailurePropagation" in "jsf-ftest" project.
            Here we use the JBoss implementation instead of the one of GlassFish, as it works as well and is easier to configure.
          -->
        <dependency>
          <groupId>jakarta.servlet</groupId>
          <artifactId>jakarta.servlet-api</artifactId>
          <scope>provided</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <!-- A guide to run it: start GlassFish with this command (remove the "[x]" text - it is just a separator, because double hyphen is forbidden)
           asadmin start-domain -[x]-verbose=true
           
           Shut it down after the tests with this command:
           asadmin stop-domain domain1
      -->
      <id>glassfish-remote</id>
      <activation>
        <property>
          <name>integration</name>
          <value>glassfish-remote</value>
        </property>
      </activation>
      <properties>
        <arquillian.launch.glassfish>true</arquillian.launch.glassfish>
      </properties>
      <dependencies>
        <dependency>
          <groupId>ee.omnifish.arquillian</groupId>
          <artifactId>arquillian-glassfish-server-remote</artifactId>
          <version>${version.arquillian.glassfish}</version>
          <scope>test</scope>
        </dependency>
        <!--The dependency on the servlet api must be declared for each profile, see detailed explanation in the
            test "org.jboss.arquillian.warp.jsf.ftest.lifecycle.TestFacesLifecycleFailurePropagation" in "jsf-ftest" project.
            Here we use the JBoss implementation instead of the one of GlassFish, as it works as well and is easier to configure.
          -->
        <dependency>
          <groupId>jakarta.servlet</groupId>
          <artifactId>jakarta.servlet-api</artifactId>
          <scope>provided</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <!-- The GlassFish 8 container supports JakartaEE11.
           Run this profile only in combination with the profile "jakartaee11" so that arquillian-extension-warp is built using the JakartaEE11 api:
           mvn clean install -Pjakartaee11,glassfish-jakartaee11-managed

           GlassFish 8 does not support Java 17
	    -->
      <id>glassfish-jakartaee11-managed</id>
      <activation>
        <property>
          <name>integration</name>
          <value>glassfish</value>
        </property>
      </activation>
      <properties>
        <arquillian.launch.glassfish>true</arquillian.launch.glassfish>
        <arquillian.container.home>${project.build.directory}/glassfish8</arquillian.container.home>
        <arquillian.container.distribution>org.glassfish.main.distributions:glassfish:zip:${version.glassfish8}
        </arquillian.container.distribution>
        <!-- Relative path to a file that should be made "executable" when the container is started by the arquillian container.
             Here it is the "asadmin" script (https://github.com/OmniFish-EE/arquillian-container-glassfish/pull/9) -->
        <arquillian.container.linux.executepermission.file>glassfish8/glassfish/bin/asadmin
        </arquillian.container.linux.executepermission.file>
      </properties>

      <!--This profile requires Java 21 to run, as this is required by GlassFish 8 -->
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <version>3.6.1</version>
            <executions>
              <execution>
                <id>enforce-java</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireJavaVersion>
                      <version>21</version>
                    </requireJavaVersion>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>

      <dependencies>
        <dependency>
          <groupId>ee.omnifish.arquillian</groupId>
          <artifactId>arquillian-glassfish-server-managed</artifactId>
          <version>${version.arquillian.glassfish}</version>
          <scope>test</scope>
        </dependency>
        <!--The dependency on the servlet api must be declared for each profile, see detailed explanation in the
            test "org.jboss.arquillian.warp.jsf.ftest.lifecycle.TestFacesLifecycleFailurePropagation" in "jsf-ftest" project.
            Here we use the JBoss implementation instead of the one of GlassFish, as it works as well and is easier to configure.
          -->
        <dependency>
          <groupId>jakarta.servlet</groupId>
          <artifactId>jakarta.servlet-api</artifactId>
          <scope>provided</scope>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <!--While executing the tests, Drone uses a locally installed Chrome browser. Combine this profile with any server profile, e.g. "mvnw clean install -Pwildfly-remote,browser-chrome"-->
      <id>browser-chrome</id>
      <activation>
        <property>
          <name>browser</name>
          <value>chrome</value>
        </property>
      </activation>
      <properties>
        <arquillian.drone.browser>chrome</arquillian.drone.browser>
      </properties>
    </profile>

    <profile>
      <!--While executing the tests, Drone uses a locally installed Firefox browser. Combine this profile with any server profile, e.g. "mvnw clean install -Pwildfly-remote,browser-firefox"-->
      <id>browser-firefox</id>
      <activation>
        <property>
          <name>browser</name>
          <value>firefox</value>
        </property>
      </activation>
      <properties>
        <arquillian.drone.browser>firefox</arquillian.drone.browser>
      </properties>
    </profile>

    <profile>
      <id>browser-remote-reusable</id>
      <properties>
        <arquillian.drone.reusable>true</arquillian.drone.reusable>
      </properties>
    </profile>

    <profile>
      <id>arquillian-debug</id>
      <activation>
        <property>
          <name>arquillian.debug</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <systemProperties>
                <property>
                  <name>java.util.logging.config.file</name>
                  <value>src/test/resources/logging.properties</value>
                </property>
              </systemProperties>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <!-- This profile is only used to enable dependabot so that it can detect and update the server containers
           that are only declared as shrinkwrap resolver GAV coordinates and thus not readable by dependabot.
           Don't use this profile for anything else.
        -->
      <id>dependabot-serverupdates</id>
      <dependencies>
        <dependency>
          <groupId>org.glassfish.main.distributions</groupId>
          <artifactId>glassfish</artifactId>
          <version>${version.glassfish}</version>
          <type>zip</type>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.wildfly</groupId>
          <artifactId>wildfly-dist</artifactId>
          <version>${version.wildfly}</version>
          <type>zip</type>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.tomee</groupId>
          <artifactId>apache-tomee</artifactId>
          <version>${version.tomee}</version>
          <type>zip</type>
          <!-- TomEE has several classifiers, so define the same that we use in the test suite -->
          <classifier>webprofile</classifier>
          <scope>provided</scope>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
</project>
