<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.jboss.arquillian.extension</groupId>
    <artifactId>arquillian-warp-aggregator</artifactId>
    <version>2.1.0.Final-SNAPSHOT</version>
  </parent>

  <artifactId>arquillian-warp-build</artifactId>
  <name>Arquillian Warp: Build Parent</name>
  <packaging>pom</packaging>

  <dependencyManagement>
    <dependencies>
      <!-- ShrinkWrap -->
      <dependency>
        <groupId>org.jboss.shrinkwrap</groupId>
        <artifactId>shrinkwrap-bom</artifactId>
        <version>${version.shrinkwrap}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- First declare the shrinkwrap-resolver bom to override version 2.2.6 pulled from elsewhere -->
      <!-- n.b. fixed by https://github.com/arquillian/arquillian-core/pull/575 - TODO move below post upgrade -->
      <dependency>
        <groupId>org.jboss.shrinkwrap.resolver</groupId>
        <artifactId>shrinkwrap-resolver-bom</artifactId>
        <version>${version.shrinkwrap.resolver}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <!-- Arquillian dependencies -->
      <dependency>
        <groupId>org.jboss.arquillian.extension</groupId>
        <artifactId>arquillian-warp-bom</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.jboss.arquillian.extension</groupId>
        <artifactId>arquillian-warp-build-resources</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.arquillian</groupId>
        <artifactId>arquillian-bom</artifactId>
        <version>${version.arquillian_core}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.jboss.arquillian.jakarta</groupId>
        <artifactId>arquillian-jakarta-bom</artifactId>
        <version>${version.org.jboss.arquillian.jakarta}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.jboss.arquillian.extension</groupId>
        <artifactId>arquillian-drone-bom</artifactId>
        <version>${version.arquillian_drone}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.jboss.arquillian.extension</groupId>
        <artifactId>arquillian-jacoco</artifactId>
        <version>${version.arquillian_jacoco}</version>
      </dependency>

      <!-- Jakarta EE 10 APIs -->
      <dependency>
        <groupId>jakarta.servlet</groupId>
        <artifactId>jakarta.servlet-api</artifactId>
        <version>${version.jakarta.servlet.jakarta-servlet-api}</version>
      </dependency>
      <dependency>
        <groupId>jakarta.enterprise</groupId>
        <artifactId>jakarta.enterprise.cdi-api</artifactId>
        <version>${version.jakarta.enterprise.jakarta-enterprise-cdi-api}</version>
      </dependency>
      <dependency>
        <groupId>jakarta.el</groupId>
        <artifactId>jakarta.el-api</artifactId>
        <version>${version.jakarta.el.jakarta-el-api}</version>
      </dependency>
      <dependency>
        <groupId>jakarta.annotation</groupId>
        <artifactId>jakarta.annotation-api</artifactId>
        <version>${version.jakarta.annotation.jakarta-annotation-api}</version>
      </dependency>
      <dependency>
        <groupId>jakarta.faces</groupId>
        <artifactId>jakarta.faces-api</artifactId>
        <version>${version.jakarta.faces.jakarta-faces-api}</version>
      </dependency>

      <!-- LittleProxy -->
      <dependency>
        <groupId>io.github.littleproxy</groupId>
        <artifactId>littleproxy</artifactId>
        <version>${version.littleproxy}</version>
      </dependency>

      <!-- Javassist -->
      <dependency>
        <groupId>org.javassist</groupId>
        <artifactId>javassist</artifactId>
        <version>${version.javassist}</version>
      </dependency>

      <!-- HttpCore -->
      <dependency>
        <groupId>org.apache.httpcomponents.core5</groupId>
        <artifactId>httpcore5</artifactId>
        <version>${version.httpcore}</version>
      </dependency>

      <!-- JUnit -->
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${version.junit}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- Mockito -->
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${version.mockito}</version>
      </dependency>
      <!-- Mockito JUnit5 extensions -->
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-junit-jupiter</artifactId>
        <version>${version.mockito}</version>
      </dependency>

      <!-- Jacoco -->
      <dependency>
        <groupId>org.jacoco</groupId>
        <artifactId>org.jacoco.core</artifactId>
        <version>${version.jacoco}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <profiles>
    <profile>
      <id>jdk11-modular</id>
      <activation>
        <jdk>[11,)</jdk>
      </activation>
      <properties>
        <modular.jdk.args>
          --add-exports=java.desktop/sun.awt=ALL-UNNAMED
          --add-exports=java.naming/com.sun.jndi.ldap=ALL-UNNAMED
          --add-exports=java.naming/com.sun.jndi.url.ldap=ALL-UNNAMED
          --add-exports=java.naming/com.sun.jndi.url.ldaps=ALL-UNNAMED
          --add-exports=jdk.naming.dns/com.sun.jndi.dns=ALL-UNNAMED
          --add-opens=java.base/java.io=ALL-UNNAMED
          --add-opens=java.base/java.lang=ALL-UNNAMED
          --add-opens=java.base/java.lang.invoke=ALL-UNNAMED
          --add-opens=java.base/java.lang.reflect=ALL-UNNAMED
          --add-opens=java.base/java.net=ALL-UNNAMED
          --add-opens=java.base/java.security=ALL-UNNAMED
          --add-opens=java.base/java.util=ALL-UNNAMED
          --add-opens=java.base/java.util.concurrent=ALL-UNNAMED
          --add-opens=java.management/javax.management=ALL-UNNAMED
          --add-opens=java.naming/javax.naming=ALL-UNNAMED
        </modular.jdk.args>
      </properties>
    </profile>
    <profile>
      <id>jdk18-security-manager</id>
      <activation>
        <jdk>[18,24)</jdk>
      </activation>
      <properties>
        <surefire.security.manager>
          -Djava.security.manager=allow
        </surefire.security.manager>
      </properties>
    </profile>
  </profiles>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <configuration>
            <configLocation>code-style/checkstyle.xml</configLocation>
            <logViolationsToConsole>true</logViolationsToConsole>
            <violationSeverity>error</violationSeverity>
            <includeTestSourceDirectory>true</includeTestSourceDirectory>
          </configuration>
          <executions>
            <execution>
              <id>checkstyle-report</id>
              <phase>verify</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
          <dependencies>
            <dependency>
              <groupId>org.jboss.arquillian.extension</groupId>
              <artifactId>arquillian-warp-build-resources</artifactId>
              <version>${project.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>com.mycila</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>5.0.0</version>
          <configuration>
            <basedir>${basedir}</basedir>
            <quiet>false</quiet>
            <failIfMissing>true</failIfMissing>
            <strictCheck>true</strictCheck>
            <aggregate>false</aggregate>
            <properties>
              <year>^\d{4}$</year>
            </properties>
            <skipExistingHeaders>true</skipExistingHeaders>
            <mapping>
              <java>SLASHSTAR_STYLE</java>
            </mapping>
            <licenseSets>
              <licenseSet>
                <header>licences/warp-license-header.txt</header>
                <includes>
                  <include>src/**</include>
                  <include>**/test/**</include>
                </includes>
                <excludes>
                  <exclude>.gitignore</exclude>
                </excludes>
                <validHeaders>
                  <validHeader>licences/apache-commons-codec.txt</validHeader>
                </validHeaders>
              </licenseSet>
            </licenseSets>
          </configuration>
          <executions>
            <execution>
              <id>license-check</id>
              <phase>verify</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
          <dependencies>
            <dependency>
              <groupId>org.jboss.arquillian.extension</groupId>
              <artifactId>arquillian-warp-build-resources</artifactId>
              <version>${project.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${version.jacoco}</version>
          <configuration>
            <excludes>
              <!-- Avoid error messages "org.jacoco.agent.rt.internal_1f1cc91.asm.MethodTooLargeException: Method too large" in classes in packages listed here: -->
              <exclude>com/gargoylesoftware/htmlunit/css/**</exclude>
              <exclude>com/gargoylesoftware/css/parser/javacc/**</exclude>
              <exclude>org/htmlunit/cssparser/parser/javacc/CSS3ParserTokenManager</exclude>
            </excludes>
          </configuration>
          <executions>
            <execution>
              <id>prepare-agent</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <configuration>
                <propertyName>surefire.jacoco.args</propertyName>
              </configuration>
            </execution>
            <execution>
              <id>report</id>
              <phase>prepare-package</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <!-- Prepend jacoco surefire args -->
            <argLine>${surefire.jacoco.args} ${surefire.security.manager} ${modular.jdk.args}</argLine>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
